/*
 * @file BLOCKS.txt
 *
 * @author Michael Mulholland
 *
 * @version 1.0.0
 *
 * @copyright
 * Copyright (C) Parallax, Inc. 2019. All Rights MIT Licensed.
 *
 * @brief BlocklyProp Block definitions for the Parallax LIS3DH 3-Axis Accelerometer with ADC Module.
 * 
 */
  
  
  
  
/*
  
  //
  // For BlocklyProp
  //


  // Create global pointer to an lis3dh object, for EACH sensor attached:
  // Example:
  lis3dh *LIS3DH;
  
  
  // Tip: For multiple sensors, add a suffix to each pointer
  // Example:
  lis3dh *LIS3DH_1;
  lis3dh *LIS3DH_2;
  

  // BLOCK: LIS3DH initialize SCK(dropdown: pin), SDI(dropdown: pin), CS(dropdown: pin)
  
  // Example:
  LIS3DH initialize SCK 8, SDI 7, CS 6
  
  // Emits: (assuming global pointer name is LIS3DH_1)
  LIS3DH_1 = lis3dh_init(8, 7, 6);
  
  

  // BLOCK: LIS3DH read(dropdown: accelerometer 1000ths of g's ; adc mV) 
            *if accel*   store X-axis in (item), store Y-axis in (item), store Z-axis in (item)
            *if adc*     store AD1    in (item), store AD2    in (item), store AD3    in (item) 
  
  // Examples: (Assuming variables x, y, and z have been created with blocks)
  LIS3DH read accelerometer (1000ths of g), store x axis in x, y axis in y, z axis in z 
  LIS3DH read adc (mV), store ad1 in x, ad2 in y, ad3 in z 
  
  // Emits: (assuming global pointer name is LIS3DH_1)
  lis3dh_accel_mg(LIS3DH_1, &x, &y, &z);
  lis3dh_adc_mV(LIS3DH_1, &x, &y, &z);
  
  
  
  // BLOCK: Temperature calibrate units(dropdown: F or C), ambient temperature(actualTempC/actualTempF)
  
  // Examples:
  Temperature calibrate units C, ambient temperature 23
  Temperature calibrate units F, ambient temperature 85
  
  // Emits: (assuming global pointer name is LIS3DH_1)
  lis3dh_tempCal_C(LIS3DH_1, 23);
  lis3dh_tempCal_F(LIS3DH_1, 85);
  
  
  
  // BLOCK: Temperature read units(dropdown: F or C), store in (item)
            * WARN! * MUST SET AMBIENT TEMPERATURE WITH CALIBRATION BLOCK

  // Examples: (Assuming variable t has been created with a block)
  Temperature read units F, store in t
  
  // Emits: (assuming global pointer name is LIS3DH_1)
  t = lis3dh_temp_C(LIS3DH_1);
  t = lis3dh_temp_F(LIS3DH_1);


*/








/**
 * TERMS OF USE: MIT License
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */





